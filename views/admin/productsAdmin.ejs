<%- include('./layouts/style') %>
<%- include('./layouts/head') %>
<%- include('./layouts/menu-list') %>

<div class="col-xl-12 col-md-12">
    <div class="card table-card">
        <div class="card-header">
            <style>
            
            </style>

        <div class="title-container">
            <h5><%= typeof title !== 'undefined' ? title : 'Quản lý Sách' %></h5>
            <h5>Tổng số sách: <strong><%= totalBooks %></strong></h5>
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#exampleModalLive">
                <i class="feather icon-plus"></i>
            </button>
            <span class="search-container">
                <label for="Search">
                    <input id="Search" class="form-control" type="text" placeholder="Search..">
                </label>
                <button type="button" class="btn btn-primary">
                    <i class="feather icon-search"></i>
                </button>
            </span>

        </div>
        <div class="card-header-right">
            <div class="btn-group card-option">
                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="feather icon-more-horizontal"></i>
                </button>
                <ul class="list-unstyled card-option dropdown-menu dropdown-menu-right">
                    <li class="dropdown-item full-card"><a href="#!"><span><i class="feather icon-maximize"></i> maximize</span><span style="display:none"><i class="feather icon-minimize"></i> Restore</span></a></li>
                    <li class="dropdown-item minimize-card"><a href="#!"><span><i class="feather icon-minus"></i> collapse</span><span style="display:none"><i class="feather icon-plus"></i> expand</span></a></li>
                    <li class="dropdown-item reload-card"><a href="#!"><i class="feather icon-refresh-cw"></i> reload</a></li>
                </ul>
            </div>
        </div>
    </div>
        <div class="card-body p-0">
            <div class="container mt-3">
                <h5>Tổng số sách: <strong><%= totalBooks %></strong></h5>
            
                <div class="table-responsive">
                    <table class="table table-hover mb-0" id="bookTable">
                        <thead>
                            <tr>
                                <th class="text-center">NO</th>
                                <th class="text-center">Title</th>
                                <th class="text-center">Author</th>
                                <th class="text-center">Category</th>
                                <th class="text-center">Publisher</th>
                                <th class="text-center">Price</th>
                                <th class="text-center">Stock</th>
                                <th class="text-center">Status</th>
                                <th class="text-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% books.forEach((book, index) => { %>
                                <tr>
                                    <td class="text-center"><%= (currentPage - 1) * 10 + index + 1 %></td>
                                    <td class="text-center"><%= book.title %></td>
                                    <td class="text-center"><%= book.author %></td>
                                    <td class="text-center"><%= book.categoryId ? book.categoryId.name : "Chưa có danh mục" %></td>
                                    <td class="text-center"><%= book.publisherId ? book.publisherId.name : "Chưa có NXB" %></td>
                                    <td class="text-center"><%= book.price %> VNĐ</td>
                                    <td class="text-center"><%= book.stock %></td>
                                    <td class="text-center"><%= book.isDeleted ? 'Inactive' : 'Active' %></td>
                                    <td class="text-center">
                                        <button type="button" class="btn btn-info edit-btn" data-id="<%= book._id %>">
                                            <i class="feather icon-edit"></i>
                                        </button>
                                        <button type="button" class="btn btn-danger delete-btn" data-id="<%= book._id %>">
                                            <i class="feather icon-trash-2"></i>
                                        </button>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            
                <!-- PHÂN TRANG -->
                <nav>
                    <ul class="pagination">
                        <% for(let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                <a class="page-link" href="/admin/books?page=<%= i %>"><%= i %></a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
            
        </div>
    </div>
</div>

<%- include('./model-insert-products') %>
<%- include('./model-update-product') %>
<%- include('./layouts/footer') %>
<%- include('./layouts/script') %>

<script>

document.addEventListener("DOMContentLoaded", function () {
    const searchInput = document.getElementById("Search"); // Lấy ô tìm kiếm
    const tableRows = document.querySelectorAll("#bookTable tbody tr"); // Lấy danh sách hàng trong bảng

    searchInput.addEventListener("keyup", function () {
        const searchText = searchInput.value.toLowerCase(); // Chuyển văn bản thành chữ thường để so sánh
        tableRows.forEach(row => {
            const title = row.children[1].textContent.toLowerCase(); // Cột tiêu đề
            const author = row.children[2].textContent.toLowerCase(); // Cột tác giả
            const category = row.children[3].textContent.toLowerCase(); // Cột danh mục
            const publisher = row.children[4].textContent.toLowerCase(); // Cột nhà xuất bản

            // Kiểm tra nếu từ khóa khớp với bất kỳ cột nào
            if (title.includes(searchText) || author.includes(searchText) || category.includes(searchText) || publisher.includes(searchText)) {
                row.style.display = ""; // Hiển thị dòng nếu tìm thấy
            } else {
                row.style.display = "none"; // Ẩn dòng nếu không tìm thấy
            }
        });
    });
});

document.addEventListener("DOMContentLoaded", function () {
    // Bắt sự kiện khi nhấn vào nút Edit
    document.querySelectorAll(".edit-btn").forEach((button) => {
        button.addEventListener("click", function () {
            // Lấy dữ liệu từ data-attributes
            const bookId = this.getAttribute("data-id");
            const title = this.getAttribute("data-title");
            const author = this.getAttribute("data-author");
            const category = this.getAttribute("data-category");
            const publisher = this.getAttribute("data-publisher");
            const description = this.getAttribute("data-description");
            const price = this.getAttribute("data-price");
            const stock = this.getAttribute("data-stock");
            const status = this.getAttribute("data-status"); // Active hoặc Inactive

            // Đưa dữ liệu vào modal update
            document.getElementById("updateBookId").value = bookId;
            document.getElementById("updateTitle").value = title;
            document.getElementById("updateAuthor").value = author;
            document.getElementById("updateCategory").value = category;
            document.getElementById("updatePublisher").value = publisher;
            document.getElementById("updateDescription").value = description;
            document.getElementById("updatePrice").value = price;
            document.getElementById("updateStock").value = stock;

            // Kiểm tra nếu là `select`, cần chọn đúng option
            const statusSelect = document.getElementById("updateStatus");
            if (statusSelect) {
                statusSelect.value = status; 
            }

            // Hiển thị modal update
            $("#updateModalLive").modal("show");
        });
    });

    // Xử lý khi nhấn "Lưu" cập nhật
    document.getElementById("saveUpdate").addEventListener("click", function () {
        const bookId = document.getElementById("updateBookId").value;
        const title = document.getElementById("updateTitle").value;
        const author = document.getElementById("updateAuthor").value;
        const categoryId = document.getElementById("updateCategory").value;
        const publisherId = document.getElementById("updatePublisher").value;
        const description = document.getElementById("updateDescription").value;
        const price = parseFloat(document.getElementById("updatePrice").value); // Chuyển thành số
        const stock = parseInt(document.getElementById("updateStock").value); // Chuyển thành số
        const status = document.getElementById("updateStatus").value === "Active" ? false : true; // Nếu chọn Inactive, đặt isDeleted = true

        // Kiểm tra dữ liệu trước khi gửi request
        if (!title || !author || !price || !stock) {
            alert("Vui lòng nhập đầy đủ thông tin!");
            return;
        }

        fetch(`/admin/books/update/${bookId}`, {
            method: "PUT",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                title,
                author,
                categoryId,
                publisherId,
                description,
                price,
                stock,
                isDeleted: status
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert("Cập nhật sách thành công!");
                location.reload(); // Load lại trang để thấy thay đổi
            } else {
                alert("Lỗi khi cập nhật sách: " + data.message);
            }
        })
        .catch(err => console.error("Lỗi khi cập nhật sách:", err));
    });
});

    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".delete-btn").forEach((button) => {
            button.addEventListener("click", function () {
                const bookId = this.getAttribute("data-id");

                if (confirm("Bạn có chắc chắn muốn xóa sách này?")) {
                    fetch(`/admin/books/${bookId}`, {  // ✅ Sửa cú pháp URL
                        method: "DELETE", // 
                        headers: {
                            "Content-Type": "application/json",
                        },
                    })
                    .then((response) => response.json())
                    .then((data) => {
                        if (data.success) {
                            alert("Xóa sách thành công!");
                            location.reload(); // ✅ Load lại danh sách sau khi xóa
                        } else {
                            alert("Lỗi khi xóa sách: " + data.message);
                        }
                    })
                    .catch((err) => console.error("Lỗi khi xóa sách:", err));
                }
            });
        });
    });
</script>

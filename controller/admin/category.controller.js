// controllers/category.controller.js
const Category = require("../../models/Category");

// ðŸ“Œ Hiá»ƒn thá»‹ danh sÃ¡ch danh má»¥c
exports.getCategories = async (req, res) => {
    try {
        const categories = await Category.find();
        res.status(200).json(categories);
    } catch (err) {
        res.status(500).json({ message: "Lá»—i server khi láº¥y danh sÃ¡ch danh má»¥c." });
    }
};

// ðŸ“Œ ThÃªm danh má»¥c má»›i
exports.createCategory = async (req, res) => {
    try {
        console.log("Dá»¯ liá»‡u nháº­n Ä‘Æ°á»£c:", req.body); // Kiá»ƒm tra dá»¯ liá»‡u gá»­i lÃªn
        const { name, description } = req.body;
        
        if (!name) {
            return res.status(400).json({ message: "TÃªn danh má»¥c lÃ  báº¯t buá»™c." });
        }

        const newCategory = new Category({ name, description });
        await newCategory.save();

        res.status(201).json(newCategory);
    } catch (err) {
        console.error("Lá»—i khi thÃªm danh má»¥c:", err); // In lá»—i ra terminal
        res.status(500).json({ message: "Lá»—i server khi thÃªm danh má»¥c.", error: err.message });
    }
};

// ðŸ“Œ Chá»‰nh sá»­a danh má»¥c
exports.updateCategory = async (req, res) => {
    try {
        const { name, description } = req.body;
        const updatedCategory = await Category.findByIdAndUpdate(req.params.id, { name, description }, { new: true });
        res.status(200).json(updatedCategory);
    } catch (err) {
        res.status(500).json({ message: "Lá»—i server khi cáº­p nháº­t danh má»¥c." });
    }
};

// ðŸ“Œ XÃ³a danh má»¥c
exports.deleteCategory = async (req, res) => {
    try {
        await Category.findByIdAndDelete(req.params.id);
        res.status(200).json({ message: "Danh má»¥c Ä‘Ã£ Ä‘Æ°á»£c xÃ³a." });
    } catch (err) {
        res.status(500).json({ message: "Lá»—i server khi xÃ³a danh má»¥c." });
    }
};

// ðŸ“Œ Xem thá»‘ng kÃª sá»‘ lÆ°á»£ng sÃ¡ch trong má»—i danh má»¥c
exports.getCategoryStatistics = async (req, res) => {
    try {
        const statistics = await Category.aggregate([
            {
                $lookup: {
                    from: "books",
                    localField: "_id",
                    foreignField: "categoryId",
                    as: "books"
                }
            },
            {
                $project: {
                    name: 1,
                    description: 1,
                    bookCount: { $size: "$books" }
                }
            }
        ]);
        res.status(200).json(statistics);
    } catch (err) {
        res.status(500).json({ message: "Lá»—i server khi láº¥y thá»‘ng kÃª danh má»¥c." });
    }
};

const User = require('../../models/User');

// üìå L·∫•y danh s√°ch t·∫•t c·∫£ ng∆∞·ªùi d√πng
exports.getAllUsers = async (req, res) => {
    try {
        const users = await User.find().select('-password'); // ·∫®n m·∫≠t kh·∫©u
        res.status(200).json({ success: true, data: users });
    } catch (err) {
        res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y danh s√°ch ng∆∞·ªùi d√πng.', error: err.message });
    }
};

// üìå L·∫•y th√¥ng tin ng∆∞·ªùi d√πng theo ID
exports.getUserById = async (req, res) => {
    try {
        const user = await User.findById(req.params.id).select('-password');
        if (!user) {
            return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng.' });
        }
        res.status(200).json({ success: true, data: user });
    } catch (err) {
        res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng.', error: err.message });
    }
};

// üìå C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng
exports.updateUser = async (req, res) => {
    try {
        const { username, email, role } = req.body;
        const user = await User.findByIdAndUpdate(req.params.id, { username, email, role }, { new: true });

        if (!user) {
            return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng.' });
        }

        res.status(200).json({ success: true, message: 'C·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng th√†nh c√¥ng.', data: user });
    } catch (err) {
        res.status(500).json({ success: false, message: 'L·ªói server khi c·∫≠p nh·∫≠t th√¥ng tin ng∆∞·ªùi d√πng.', error: err.message });
    }
};

// üìå Kh√≥a/M·ªü kh√≥a t√†i kho·∫£n kh√°ch h√†ng
exports.toggleUserStatus = async (req, res) => {
    try {
        const user = await User.findById(req.params.id);

        if (!user) {
            return res.status(404).json({ success: false, message: 'Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng.' });
        }

        user.isActive = !user.isActive; // ƒê·∫£o tr·∫°ng th√°i t√†i kho·∫£n
        await user.save();

        res.status(200).json({ success: true, message: `T√†i kho·∫£n ${user.isActive ? 'ƒë√£ ƒë∆∞·ª£c m·ªü kh√≥a' : 'ƒë√£ b·ªã kh√≥a'}.`, data: user });
    } catch (err) {
        res.status(500).json({ success: false, message: 'L·ªói server khi c·∫≠p nh·∫≠t tr·∫°ng th√°i t√†i kho·∫£n.', error: err.message });
    }
};

// üìå Th·ªëng k√™ ho·∫°t ƒë·ªông ng∆∞·ªùi d√πng
exports.getUserStatistics = async (req, res) => {
    try {
        const totalUsers = await User.countDocuments();
        const activeUsers = await User.countDocuments({ isActive: true });
        const totalProductViews = await User.aggregate([{ $group: { _id: null, total: { $sum: "$productViews" } } }]);
        const totalCartItems = await User.aggregate([{ $group: { _id: null, total: { $sum: "$cartItemsAdded" } } }]);

        res.status(200).json({
            success: true,
            data: {
                totalUsers,
                activeUsers,
                totalProductViews: totalProductViews[0]?.total || 0,
                totalCartItems: totalCartItems[0]?.total || 0
            }
        });
    } catch (err) {
        res.status(500).json({ success: false, message: 'L·ªói server khi l·∫•y th·ªëng k√™ ng∆∞·ªùi d√πng.', error: err.message });
    }
};
